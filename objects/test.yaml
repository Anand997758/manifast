apiVersion: apps/v1
kind: Deployment
metadata:
  name:  anand
  namespace: anand
  labels:
    app:  anand
spec:
  selector:
    matchLabels:
      app: anand
  replicas: 1
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app:  anand
    spec:
      # initContainers:
        # Init containers are exactly like regular containers, except:
          # - Init containers always run to completion.
          # - Each init container must complete successfully before the next one starts.
      containers:
      - name:  tomcat
        image: 288701581823.dkr.ecr.ap-northeast-1.amazonaws.com/test:1
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
          limits:
            cpu: 100m
            memory: 100Mi
        livenessProbe:
          tcpSocket:
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /_status/healthz
            port: 80
          initialDelaySeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
          periodSeconds: 10
        env:
        - name: DB_USER_URL
          valueFrom:
            secretKeyRef:
              name: anandsecret
              key: URL
        - name: DB_USER_NAME
          valueFrom:
            secretKeyRef:
              name: anandsecret
              key: USER_NAME
        - name: DB_USER_PASSWD
          valueFrom:
            secretKeyRef:
              name: anandsecret
              key: PASSWORD 
        ports:
        - containerPort:  8080
          name:  anand
    #     volumeMounts:
    #     - name: localtime
    #       mountPath: /etc/localtime
    # volumes:
    #   PersistentVolumeClaim:
    #     claintName: anandpvc

